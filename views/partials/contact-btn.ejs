<!-- Contact Button Component -->
<style>
    /* Contact Button Styles */
    .contact-button {
        position: fixed;
        bottom: 30px;
        right: 30px;
        z-index: 1000;
        text-decoration: none;
        background: linear-gradient(135deg, #34495e, #2c3e50);
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        opacity: 0;
        transform: translateY(100px) scale(0.8);
        backdrop-filter: blur(10px);
        border: 2px solid rgba(255, 255, 255, 0.1);
        overflow: hidden;
    }

    .contact-button.visible {
        opacity: 1;
        transform: translateY(0) scale(1);
    }

    .contact-button::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #4a6741, #3e5f3a);
        opacity: 0;
        transition: opacity 0.3s;
        border-radius: 50%;
    }

    .contact-button:hover::before {
        opacity: 1;
    }

    .contact-button:hover {
        transform: translateY(-5px) scale(1.1);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);
    }

    .contact-button:active {
        transform: translateY(-2px) scale(1.05);
    }

    /* Contact Icon (phone/headset) */
    .contact-icon {
        width: 28px;
        height: 28px;
        background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="white"><path d="M20.01 15.38c-1.23 0-2.42-.2-3.53-.56-.35-.12-.74-.03-1.01.24l-1.57 1.97c-2.83-1.35-5.48-3.9-6.89-6.83l1.95-1.66c.27-.28.35-.67.24-1.02-.37-1.11-.56-2.3-.56-3.53 0-.54-.45-.99-.99-.99H4.19C3.65 3 3 3.24 3 3.99 3 13.28 10.73 21 20.01 21c.71 0 .99-.63.99-1.18v-3.45c0-.54-.45-.99-.99-.99z"/></svg>') no-repeat center;
        background-size: contain;
        transition: transform 0.3s;
        position: relative;
        z-index: 2;
    }

    .contact-button:hover .contact-icon {
        transform: scale(1.1);
    }

    /* Ripple effect */
    .contact-button::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        transition: width 0.6s, height 0.6s;
        z-index: 1;
    }

    .contact-button:hover::after {
        width: 120px;
        height: 120px;
    }

    /* Subtle pulse animation when visible */
    .contact-button.visible {
        animation: subtlePulse 3s ease-in-out infinite;
    }

    @keyframes subtlePulse {
        0%, 100% { 
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
        }
        50% { 
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4), 0 0 0 8px rgba(52, 73, 94, 0.1);
        }
    }

    @keyframes rippleEffect {
        to {
            transform: scale(2);
            opacity: 0;
        }
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .contact-button {
            bottom: 20px;
            right: 20px;
            width: 55px;
            height: 55px;
        }

        .contact-icon {
            width: 24px;
            height: 24px;
        }
    }
</style>

<!-- Contact Button HTML -->
<a href="/contact" class="contact-button" id="contactButton">
    <div class="contact-icon"></div>
</a>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const contactButton = document.getElementById('contactButton');
        let isVisible = false;
        
        // Scroll handler
        function handleScroll() {
            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
            const windowHeight = window.innerHeight;
            const documentHeight = document.documentElement.scrollHeight;
            
            // Show button after scrolling past first 100vh
            const shouldShow = scrollTop > windowHeight;
            
            if (shouldShow && !isVisible) {
                contactButton.classList.add('visible');
                isVisible = true;
            } else if (!shouldShow && isVisible) {
                contactButton.classList.remove('visible');
                isVisible = false;
            }
            
            // Hide button when near bottom of page
            const nearBottom = scrollTop > (documentHeight - windowHeight - 200);
            if (nearBottom && isVisible) {
                contactButton.style.opacity = '0.3';
            } else if (isVisible) {
                contactButton.style.opacity = '1';
            }
        }
        
        // Throttled scroll event
        let ticking = false;
        function requestTick() {
            if (!ticking) {
                requestAnimationFrame(handleScroll);
                ticking = true;
                setTimeout(() => ticking = false, 16);
            }
        }
        
        window.addEventListener('scroll', requestTick);
        
        // Enhanced hover effects
        contactButton.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-5px) scale(1.1)';
        });
        
        contactButton.addEventListener('mouseleave', function() {
            this.style.transform = isVisible ? 'translateY(0) scale(1)' : 'translateY(100px) scale(0.8)';
        });
        
        // Click ripple effect
        contactButton.addEventListener('click', function(e) {
            const ripple = document.createElement('div');
            const rect = this.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;
            
            ripple.style.cssText = `
                position: absolute;
                width: ${size}px;
                height: ${size}px;
                background: rgba(255, 255, 255, 0.3);
                border-radius: 50%;
                left: ${x}px;
                top: ${y}px;
                transform: scale(0);
                animation: rippleEffect 0.6s ease-out;
                pointer-events: none;
                z-index: 3;
            `;
            
            this.appendChild(ripple);
            
            setTimeout(() => {
                ripple.remove();
            }, 600);
        });
        
        // Initial check
        handleScroll();
    });
</script>